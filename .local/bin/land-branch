#!/usr/bin/env bash

DEBUG=0
LOG_FILE=$(mktemp)
touch $LOG_FILE

function log () {
  if [ $DEBUG -eq 1 ]; then
    echo "$1" >> $LOG_FILE
  fi
}

function do_exit () {
  final_log_file="/tmp/land-branch-$(date +%s)"
  log "$2"
  cat $LOG_FILE > $final_log_file
  rm $LOG_FILE
  echo "$final_log_file"
  exit $1
}

function process_git_branch () {
  log "We are about to start"
  log "Target branch is '$1'"
  git checkout -q `git config user.branch`
  git pull -q --ff-only --no-verify
  git checkout -q $1
  git rebase -q `git config user.branch` $1
  git commit -q --amend --no-edit --date=now
  git push -q --force
  to1=`gh pr create --fill`
  log "$to1"
  to2=`gh pr merge --admin --merge`
  log "$to2"
  git push origin -q --delete $1;
  git checkout -q `git config user.branch`
  git pull -q --ff-only --prune --no-verify
  echo -e "\n'$1' has been successully landed!"
}

if [ ! -d "$1" ]; then
  do_exit 1 "Passed path is not a valid directory. Exiting"
fi

if [ ! -d "$1/.git" ]; then
  do_exit 1 "Passed path is not a valid git repo. Exiting"
fi

log $1
cd $1

# "git qf" is my alias
SRC_FILE=`git qf`

if [ ! -f "$SRC_FILE" ]; then
  do_exit 1 "Queue file has not been found. Exiting"
fi

command -v git > /dev/null;
if [ "$?" -ne 0 ]; then
  do_exit 1 "Git CLI has not been found. Exiting"
fi

command -v gh > /dev/null;
if [ "$?" -ne 0 ]; then
  do_exit 1 "Github CLI has not been found. Exiting"
fi

BRANCH=`head -n 1 $SRC_FILE`

if [ -z "$BRANCH" ]; then
  do_exit 0 "Nothing to do..."
fi

if [ "$BRANCH" = "__noop__" ]; then
  log "Nothing to do today..."
else
  git show-ref -q --heads $BRANCH

  if [ $? -ne 0 ]; then
    do_exit 1 "Branch '$BRANCH' does not exist"
  fi

  process_git_branch "$BRANCH"
fi

tmpfile=$(mktemp)
tail -n +2 $SRC_FILE > $tmpfile
cat $tmpfile > $SRC_FILE

do_exit 0 "all done"
